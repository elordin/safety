<#@ template inherits="Safety.ProgramGraphDsl.ProgramGraphTransformation" hostspecific="true" #>
<#@ output encoding="us-ascii" extension=".smv" #>
<#@ assembly Name="Safety.ProgramGraphDsl.dll" #>

<#=  TransformToNuSMV() #>


DEFINE
    Crossing                        := v.V_Crossing;
    CrossingRadioModule             := v.V_CrossingRadioModule;
    CrossingTimer                   := v.V_CrossingTimer;
	DriveTrain                      := v.V_DriveTrain;
    Gates                           := v.V_Gates;
	Odometer                        := v.V_Odometer;
    RealTrain                       := v.V_RealTrain;
    SensorGate                      := v.V_SensorGate;
    SensorSP                        := v.V_SensorSP;
    TrainRadioModule                := v.V_TrainRadioModule;
	VirtualTrain                    := v.V_VirtualTrain;
	 
    HAZARD                          := RealTrain = L_OnGP & Crossing != L_Protected;

    EP                              := 
		-1 * v.V_z - v.V_Speed * v.V_Speed / 2 / v.V_a - 2 * v.V_c * v.V_Speed - v.V_Speed * ( v.V_t + v.V_c );
    AP								:= 
		-1 * v.V_z - v.V_Speed * v.V_Speed / 2 / v.V_a - 2 * v.V_c * v.V_Speed;
    BEP								:= 
		-1 * v.V_z - v.V_Speed * v.V_Speed / 2 / v.V_a;
		
	NOFAULT :=
		v.V_F_Odometer         != L_FaultyMeasurements &
		v.V_F_SensorSP         != L_FaultyMeasurements &
		v.V_F_SensorGate       != L_FaultyMeasurements &
		v.V_F_DriveTrain       != L_BreaksOK           &
		v.V_F_Gates            != L_AllOK              ;

	-- { Odometer }
	F1 := v.V_F_SensorSP       != L_FaultyMeasurements &
		  v.V_F_SensorGate     != L_FaultyMeasurements &
		  v.V_F_DriveTrain     != L_BreaksOK           ;
	
	-- { SensorSP }
	F2 := v.V_F_Odometer       != L_FaultyMeasurements &
		  v.V_F_SensorGate     != L_FaultyMeasurements &
		  v.V_F_DriveTrain     != L_BreaksOK           ;
	
	-- { SensorGate }
	F3 := v.V_F_Odometer       != L_FaultyMeasurements &
		  v.V_F_SensorSP       != L_FaultyMeasurements &
		  v.V_F_DriveTrain     != L_BreaksOK           ;

	-- { DriveTrain }
	F4 := v.V_F_Odometer       != L_FaultyMeasurements &
		  v.V_F_SensorSP       != L_FaultyMeasurements &
		  v.V_F_SensorGate     != L_FaultyMeasurements ;
	
	-- { Gates }	  
	F5 := v.V_F_Odometer       != L_FaultyMeasurements &
		  v.V_F_SensorSP       != L_FaultyMeasurements &
		  v.V_F_SensorGate     != L_FaultyMeasurements &
		  v.V_F_DriveTrain     != L_BreaksOK           ;

	-- { SpeedMeasurement }
	F6 := v.V_F_Odometer       != L_FaultyMeasurements &
		  v.V_F_SensorSP       != L_FaultyMeasurements &
		  v.V_F_SensorGate     != L_FaultyMeasurements &
		  v.V_F_DriveTrain     != L_BreaksOK           &
		  v.V_F_Gates          != L_AllOK              ;



-- LTLSPEC F1 U HAZARD; -- Single Point of Failure
-- LTLSPEC F2 U HAZARD; -- Single Point of Failure
-- LTLSPEC F3 U HAZARD; -- Single Point of Failure
-- LTLSPEC F4 U HAZARD; -- Single Point of Failure
-- LTLSPEC F5 U HAZARD; -- Single Point of Failure
-- LTLSPEC F6 U HAZARD; -- Single Point of Failure
